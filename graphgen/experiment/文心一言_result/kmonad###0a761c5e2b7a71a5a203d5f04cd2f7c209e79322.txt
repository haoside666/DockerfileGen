已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM lierdakil/alpine-haskell:8.10.7
WORKDIR /usr/src/kmonad/
RUN apk --no-cache add git
RUN stack update
COPY ./kmonad.cabal ./
COPY ./static/stack.yaml ./static/
COPY ./stack.yaml ./
RUN cat ./static/stack.yaml >> stack.yaml && stack --no-install-ghc --system-ghc --skip-ghc-check -j8 build --only-dependencies
COPY ./ ./
RUN cat ./static/stack.yaml >> stack.yaml && stack --no-install-ghc --system-ghc --skip-ghc-check install --ghc-options -j

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(1, 0),  # WORKDIR指令依赖于FROM指令，因为工作目录的设置需要在基础镜像上  
 (2, 1),  # 第一个RUN指令依赖于WORKDIR指令，因为apk包管理器的操作需要在指定的工作目录中执行  
 (3, 2),  # 第二个RUN指令依赖于第一个RUN指令，因为stack update操作通常需要在apk add git之后执行  
 (4, 3),  # COPY ./kmonad.cabal ./指令依赖于第二个RUN指令，因为复制文件需要在相关依赖安装之后  
 (5, 4),  # COPY ./static/stack.yaml ./static/指令依赖于前一个COPY指令，因为两个COPY操作逻辑上连续  
 (6, 5),  # COPY ./stack.yaml ./指令依赖于前一个COPY指令，继续复制必要的配置文件  
 (7, 6),  # 第三个RUN指令依赖于上一个COPY指令，因为stack build操作需要完整的配置文件  
 (8, 7),  # COPY ./ ./指令依赖于上一个RUN指令，因为复制整个目录到工作目录通常在构建步骤之后  
 (9, 8)]  # 第四个RUN指令依赖于上一个COPY指令，因为stack install操作需要在所有文件都到位后执行