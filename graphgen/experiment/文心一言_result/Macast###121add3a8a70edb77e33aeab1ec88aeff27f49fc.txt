已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM python:3.7-slim-buster
ENV PYPI_URL=https://pypi.tuna.tsinghua.edu.cn
ENV PYPI_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
RUN set -x && mkdir -p /usr/lib/python3 && ln -s /usr/local/lib/python3.7/site-packages /usr/lib/python3/dist-packages && apt-get update && apt-get install -y --no-install-recommends binutils python3-gi libgtk-3-dev libappindicator3-dev upx git
RUN mkdir -p /root/.pip && echo "[global]" > /root/.pip/pip.conf && echo "index = $PYPI_URL" >> /root/.pip/pip.conf && echo "index-url = $PYPI_INDEX_URL" >> /root/.pip/pip.conf && echo "trusted-host = $(echo $PYPI_URL | perl -pe 's|^.*?://(.*?)(:.*?)?/.*$|$1|')" >> /root/.pip/pip.conf && pip install pyinstaller && mkdir /src/ && echo \#\!/bin/bash -i >> /entrypoint.sh && echo >> /entrypoint.sh && echo "set -e" >> /entrypoint.sh && echo "cd /src" >> /entrypoint.sh && echo "echo \"\$@\"" >> /entrypoint.sh && echo "sh -c \"\$@\"" >> /entrypoint.sh && chmod +x /entrypoint.sh
VOLUME /src/
WORKDIR /src/
SHELL ["/bin/bash", "-i", "-c"]
ENTRYPOINT ["/entrypoint.sh"]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(1, 0),  # ENV指令依赖于FROM指令，设置环境变量需要基于基础镜像  
 (2, 1),  # 第二个ENV指令依赖于第一个ENV指令，因为它们都设置PYPI相关的URL  
 (3, 2),  # RUN指令依赖于第二个ENV指令，因为需要用到其中的环境变量进行软件包的安装和配置  
 (4, 3),  # 第二个RUN指令依赖于第一个RUN指令，因为需要在前一个指令创建的基础上进一步配置和安装  
 (5, 4),  # VOLUME指令依赖于第二个RUN指令，因为设置卷通常是在所有依赖安装完毕之后  
 (6, 5),  # WORKDIR指令依赖于VOLUME指令，因为工作目录的设置通常是在卷配置之后  
 (7, 6),  # SHELL指令依赖于WORKDIR指令，因为更改shell的执行方式通常在工作目录设置之后  
 (8, 7)]  # ENTRYPOINT指令依赖于SHELL指令，因为入口点脚本的执行需要依赖特定的shell配置