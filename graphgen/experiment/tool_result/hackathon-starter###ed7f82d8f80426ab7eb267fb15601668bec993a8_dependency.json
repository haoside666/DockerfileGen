[
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "WORKDIR /starter",
        "edge": "(0, 1)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "ENV NODE_ENV=development",
        "edge": "(0, 2)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "COPY .env.example /starter/.env.example",
        "edge": "(0, 3)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "COPY . /starter",
        "edge": "(0, 4)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "RUN npm install pm2 -g",
        "edge": "(0, 5)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "RUN if [ \"development\" = \"production\" ]; then npm install --omit dev; else npm install; fi",
        "edge": "(0, 6)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "CMD pm2-runtime app.js",
        "edge": "(0, 7)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM node:20-slim",
        "after_instruct": "EXPOSE 8080",
        "edge": "(0, 8)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "WORKDIR /starter",
        "after_instruct": "COPY .env.example /starter/.env.example",
        "edge": "(1, 3)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency"
    },
    {
        "before_instruct": "WORKDIR /starter",
        "after_instruct": "COPY . /starter",
        "edge": "(1, 4)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency"
    },
    {
        "before_instruct": "WORKDIR /starter",
        "after_instruct": "RUN npm install pm2 -g",
        "edge": "(1, 5)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency,because RUN instruct use /starter"
    },
    {
        "before_instruct": "WORKDIR /starter",
        "after_instruct": "RUN if [ \"development\" = \"production\" ]; then npm install --omit dev; else npm install; fi",
        "edge": "(1, 6)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency,because RUN instruct use /starter"
    },
    {
        "before_instruct": "ENV NODE_ENV=development",
        "after_instruct": "RUN if [ \"development\" = \"production\" ]; then npm install --omit dev; else npm install; fi",
        "edge": "(2, 6)",
        "type": "ENV_VAR",
        "dependency_description": "environment variable dependencies"
    },
    {
        "before_instruct": "COPY . /starter",
        "after_instruct": "RUN npm install pm2 -g",
        "edge": "(4, 5)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency,because common path /starter"
    },
    {
        "before_instruct": "COPY . /starter",
        "after_instruct": "RUN if [ \"development\" = \"production\" ]; then npm install --omit dev; else npm install; fi",
        "edge": "(4, 6)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency,because common path /starter"
    },
    {
        "before_instruct": "RUN npm install pm2 -g",
        "after_instruct": "RUN if [ \"development\" = \"production\" ]; then npm install --omit dev; else npm install; fi",
        "edge": "(5, 6)",
        "type": "RUN_PKG",
        "dependency_description": "have shell pkg intersection,because exist intersection {'npm'}"
    }
]