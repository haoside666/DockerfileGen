已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM ubuntu:bionic
MAINTAINER Zach Halpern <zahalpern+github@gmail.com>
RUN apt-get update && apt-get install -y build-essential cmake git libprotobuf-dev libqt5sql5-mysql libmysqlclient-dev libqt5websockets5-dev protobuf-compiler qt5-default qtbase5-dev qttools5-dev-tools qttools5-dev
COPY . /home/servatrice/code/
WORKDIR /home/servatrice/code
WORKDIR build
RUN cmake .. -DWITH_SERVER=1 -DWITH_CLIENT=0 -DWITH_ORACLE=0 -DWITH_DBCONVERTER=0 && make && make install
WORKDIR /home/servatrice
EXPOSE 4747
ENTRYPOINT [ "servatrice", "--log-to-console" ]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

(0, 1) # MAINTAINER 指令依赖于 FROM 指令，设置维护者信息需要基于基础镜像  
(1, 2) # RUN 指令依赖于 MAINTAINER 指令，安装软件包需要在设置维护者信息之后  
(2, 3) # COPY 指令依赖于 RUN 指令，复制文件到容器通常需要在安装必要的软件包之后  
(3, 4) # WORKDIR 指令依赖于 COPY 指令，更改工作目录通常是为了操作刚刚复制的文件  
(4, 5) # WORKDIR 指令依赖于上一个 WORKDIR 指令，连续更改工作目录是累积的  
(5, 6) # RUN 指令依赖于 WORKDIR 指令，构建或编译操作通常在特定的工作目录中执行  
(6, 7) # WORKDIR 指令依赖于 RUN 指令，进一步更改工作目录可能是为了准备应用程序的运行环境  
(7, 8) # EXPOSE 指令依赖于 WORKDIR 指令，尽管逻辑上可能不直接相关，但通常是在配置工作目录后暴露端口  
(8, 9) # ENTRYPOINT 指令依赖于 EXPOSE 指令，定义容器启动时运行的命令通常是在所有配置完成后进行的