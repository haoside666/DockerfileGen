已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM ruby:3.2-alpine
WORKDIR /app
ADD _config.yml /app/
ADD _config_prod.yml /app/
ADD Gemfile /app/
ADD Gemfile.lock /app/
ADD package.json /app/
ADD pnpm-lock.yaml /app/
ADD gulpfile.js /app/
RUN apk add --virtual build-dependencies build-base npm
RUN apk upgrade
RUN npm i -g pnpm
RUN pnpm install
RUN bundle config --global silence_root_warning 1 && bundler install --verbose
EXPOSE 3000
EXPOSE 3001
ENTRYPOINT [ "pnpm", "run", "start-plugins" ]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(0, 1),  # WORKDIR 依赖于 FROM，因为设置工作目录需要基于基础镜像  
 (1, 2),  # ADD _config.yml 依赖于 WORKDIR，因为需要将文件添加到设定的工作目录  
 (2, 3),  # ADD _config_prod.yml 依赖于 ADD _config.yml，因为文件添加顺序可能影响应用的配置  
 (3, 4),  # ADD Gemfile 依赖于 ADD _config_prod.yml，以确保基础依赖文件先被添加  
 (4, 5),  # ADD Gemfile.lock 依赖于 ADD Gemfile，因为锁定文件依赖于基础Gemfile  
 (5, 6),  # ADD package.json 依赖于 ADD Gemfile.lock，确保Node.js项目的依赖信息先被添加  
 (6, 7),  # ADD pnpm-lock.yaml 依赖于 ADD package.json，因为锁定文件依赖于基础package.json  
 (7, 8),  # ADD gulpfile.js 依赖于 ADD pnpm-lock.yaml，按照文件依赖顺序添加其他必要文件  
 (8, 9),  # 第一个 RUN 依赖于 ADD gulpfile.js，因为安装构建依赖需要在所有必要文件添加之后  
 (9, 10), # 第二个 RUN 依赖于第一个 RUN，因为系统升级通常是在安装构建依赖之后进行  
 (10, 11), # 第三个 RUN 依赖于第二个 RUN，因为全局安装npm包需要在系统升级后  
 (11, 12), # 第四个 RUN 依赖于第三个 RUN，因为pnpm install需要全局pnpm包  
 (12, 13), # 第五个 RUN 依赖于第四个 RUN，因为安装Ruby依赖需要在Node.js依赖安装之后  
 (13, 14), # EXPOSE  不依赖于任何指令，因为是声明端口  
 (14, 15), # EXPOSE  不依赖于任何指令，因为是声明端口  
 (15, 16)] # ENTRYPOINT 依赖于所有之前的RUN指令，因为启动应用需要所有依赖和环境配置完成