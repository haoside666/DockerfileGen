已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM ubuntu:18.04
RUN apt-get update
RUN apt-get install -y libpq-dev
RUN apt-get install -y python3-dev
RUN apt-get install -y python3-pip
RUN apt-get clean
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install --upgrade pillow
WORKDIR /saythanks
COPY ./requirements.txt .
RUN python3 -m pip install -r requirements.txt
COPY . .
EXPOSE 5000
CMD [ "python3", "t.py" ]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

(0, 1) # RUN apt-get update 依赖于 FROM ubuntu:18.04，更新软件包列表需要基于基础镜像  
(1, 2) # RUN apt-get install -y libpq-dev 依赖于 RUN apt-get update，安装软件包需要在更新软件包列表之后  
(2, 3) # RUN apt-get install -y python3-dev 依赖于 RUN apt-get install -y libpq-dev，因为可以并行安装依赖包  
(3, 4) # RUN apt-get install -y python3-pip 依赖于 RUN apt-get install -y python3-dev，因为可以并行安装依赖包  
(4, 5) # RUN apt-get clean 依赖于 RUN apt-get install -y python3-pip，清理不再需要的软件包文件  
(5, 6) # RUN python3 -m pip install --upgrade pip 依赖于 RUN apt-get clean，确保在清理后升级pip  
(6, 7) # RUN python3 -m pip install --upgrade pillow 依赖于 RUN python3 -m pip install --upgrade pip，在pip升级后安装Pillow库  
(7, 8) # WORKDIR /saythanks 依赖于 RUN python3 -m pip install --upgrade pillow，设置工作目录通常在软件包安装后  
(8, 9) # COPY ./requirements.txt . 依赖于 WORKDIR /saythanks，复制文件到容器中基于当前工作目录  
(9, 10) # RUN python3 -m pip install -r requirements.txt 依赖于 COPY ./requirements.txt .，安装项目依赖需要requirements.txt文件  
(10, 11) # COPY . . 依赖于 RUN python3 -m pip install -r requirements.txt，复制项目代码到容器中  
(11, 12) # EXPOSE 5000 不依赖于之前的指令，声明暴露的端口不依赖于特定文件或配置的复制  
(12, 13) # CMD [ "python3", "t.py" ] 依赖于前面的所有指令，特别是项目代码和依赖的安装，因为这是容器启动时执行的命令