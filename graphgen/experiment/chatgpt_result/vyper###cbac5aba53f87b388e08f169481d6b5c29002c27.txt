已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


0 FROM python:3.11-slim
1 ARG BUILD_DATE
2 ARG VCS_REF
3 LABEL org.label-schema.build-date=$BUILD_DATE org.label-schema.name="Vyper" org.label-schema.description="Vyper is an experimental programming language" org.label-schema.url="https://vyper.readthedocs.io/en/latest/" org.label-schema.vcs-ref=$VCS_REF org.label-schema.vcs-url="https://github.com/vyperlang/vyper" org.label-schema.vendor="Vyper Team" org.label-schema.schema-version="1.0"
4 RUN apt-get update && apt-get install -y --no-install-recommends apt-utils gcc git libc6-dev libc-dev libssl-dev libgmp-dev && rm -rf /var/lib/apt/lists/*
5 ADD . /code
6 WORKDIR /code
7 RUN git reset --hard
8 RUN pip install --no-cache-dir .[test] && apt-get purge -y --auto-remove apt-utils gcc libc6-dev libc-dev libssl-dev
9 ENTRYPOINT ["/usr/local/bin/vyper"]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。
注意不是只判断前后两条指令行间的依赖关系，存在(1,3)这种情况，且前后两条指令不一定有依赖关系，依赖关系定义是即不可交换的偏序关系，交换后会导致原镜像构建失败。

[
    (0, 1),  # FROM 指令需要在定义 ARG 参数之前定义基础镜像
    (0, 3),  # LABEL 中使用的 ARG 参数需要在其定义后使用
    (1, 3),  # ARG 参数需要在 LABEL 中使用之前定义
    (0, 4),  # RUN 指令需要在定义基础镜像之后执行
    (4, 5),  # 安装依赖后才能添加源代码
    (5, 6),  # 添加源代码后才能设置工作目录
    (6, 7),  # WORKDIR 设置后才能执行 git reset
    (5, 8),  # 需要在添加代码之后才能安装 Python 依赖
    (4, 8),  # 安装依赖后才能进行 Python 包的安装
    (0, 9)   # ENTRYPOINT 指令需要在基础镜像定义后才能使用
]
