[
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "ARG TARGETPLATFORM=\"\"",
        "edge": "(0, 1)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "ARG TARGETARCH=\"\"",
        "edge": "(0, 2)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "ARG TARGETVARIANT=\"\"",
        "edge": "(0, 3)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "RUN printf \"I'm building for TARGETPLATFORM=${TARGETPLATFORM}\" && printf \", TARGETARCH=${TARGETARCH}\" && printf \", TARGETVARIANT=${TARGETVARIANT} \\n\" && printf \"With uname -s : \" && uname -s && printf \"and  uname -m : \" && uname -mm",
        "edge": "(0, 4)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "RUN apk --no-cache add make git dumb-init openssl",
        "edge": "(0, 5)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "WORKDIR /wildduck",
        "edge": "(0, 6)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "COPY package*.json ./",
        "edge": "(0, 7)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "RUN npm install --production",
        "edge": "(0, 8)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "COPY . .",
        "edge": "(0, 9)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "ENV WILDDUCK_APPDIR=/wildduck WILDDUCK_CONFIG=/wildduck/config/default.toml CMD_ARGS=\"\"",
        "edge": "(0, 10)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "ENTRYPOINT /usr/bin/dumb-init --",
        "edge": "(0, 11)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "FROM --platform=${BUILDPLATFORM} node:lts-alpine",
        "after_instruct": "CMD node /wildduck/server.js --config=/wildduck/config/default.toml ${CMD_ARGS}",
        "edge": "(0, 12)",
        "type": "BASIC_IMAGE",
        "dependency_description": "Image dependency"
    },
    {
        "before_instruct": "ARG TARGETPLATFORM=\"\"",
        "after_instruct": "RUN printf \"I'm building for TARGETPLATFORM=${TARGETPLATFORM}\" && printf \", TARGETARCH=${TARGETARCH}\" && printf \", TARGETVARIANT=${TARGETVARIANT} \\n\" && printf \"With uname -s : \" && uname -s && printf \"and  uname -m : \" && uname -mm",
        "edge": "(1, 4)",
        "type": "ENV_VAR",
        "dependency_description": "environment variable dependencies"
    },
    {
        "before_instruct": "ARG TARGETARCH=\"\"",
        "after_instruct": "RUN printf \"I'm building for TARGETPLATFORM=${TARGETPLATFORM}\" && printf \", TARGETARCH=${TARGETARCH}\" && printf \", TARGETVARIANT=${TARGETVARIANT} \\n\" && printf \"With uname -s : \" && uname -s && printf \"and  uname -m : \" && uname -mm",
        "edge": "(2, 4)",
        "type": "ENV_VAR",
        "dependency_description": "environment variable dependencies"
    },
    {
        "before_instruct": "ARG TARGETVARIANT=\"\"",
        "after_instruct": "RUN printf \"I'm building for TARGETPLATFORM=${TARGETPLATFORM}\" && printf \", TARGETARCH=${TARGETARCH}\" && printf \", TARGETVARIANT=${TARGETVARIANT} \\n\" && printf \"With uname -s : \" && uname -s && printf \"and  uname -m : \" && uname -mm",
        "edge": "(3, 4)",
        "type": "ENV_VAR",
        "dependency_description": "environment variable dependencies"
    },
    {
        "before_instruct": "WORKDIR /wildduck",
        "after_instruct": "COPY package*.json ./",
        "edge": "(6, 7)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency"
    },
    {
        "before_instruct": "WORKDIR /wildduck",
        "after_instruct": "RUN npm install --production",
        "edge": "(6, 8)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency,because RUN instruct use /wildduck"
    },
    {
        "before_instruct": "WORKDIR /wildduck",
        "after_instruct": "COPY . .",
        "edge": "(6, 9)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency"
    },
    {
        "before_instruct": "COPY package*.json ./",
        "after_instruct": "RUN npm install --production",
        "edge": "(7, 8)",
        "type": "FILE_DIR",
        "dependency_description": "exist file or directory dependency,because common path /wildduck"
    }
]