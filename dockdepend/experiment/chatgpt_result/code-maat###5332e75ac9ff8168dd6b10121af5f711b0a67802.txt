已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


0 FROM clojure:alpine
1 VOLUME /data
2 LABEL description="code-maat docker image."
3 ARG dest=/usr/src/code-maat
4 RUN mkdir -p $dest
5 WORKDIR $dest
6 COPY project.clj $dest
7 RUN lein deps
8 COPY . $dest
9 RUN mv "$(lein uberjar | sed -n 's/^Created \(.*standalone\.jar\)/\1/p')" app-standalone.jar
10 ENTRYPOINT ["java", "-XX:+UseContainerSupport", "-XX:MaxRAMPercentage=85.0", "-jar", "app-standalone.jar"]
11 CMD []

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。
注意不是只判断前后两条指令行间的依赖关系，存在(1,3)这种情况，且前后两条指令不一定有依赖关系，依赖关系定义是即不可交换的偏序关系，交换后会导致原镜像构建失败。

[
    (0, 1),  # FROM 指令需要在 VOLUME 指令之前执行
    (0, 2),  # FROM 指令需要在 LABEL 指令之前执行
    (0, 3),  # FROM 指令需要在 ARG 指令之前执行
    (0, 4),  # FROM 指令需要在 RUN 指令之前执行
    (4, 5),  # RUN 指令需要在 WORKDIR 指令之前执行
    (5, 6),  # WORKDIR 指令需要在 COPY 指令之前执行
    (6, 7),  # COPY 指令需要在 RUN lein deps 之前执行
    (7, 8),  # RUN lein deps 需要在第二个 COPY 指令之前执行
    (8, 9),  # 第二个 COPY 指令需要在 RUN mv 指令之前执行
    (9, 10), # RUN mv 指令需要在 ENTRYPOINT 指令之前执行
    (9, 11)  # RUN mv 指令需要在 CMD 指令之前执行
]
