已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


0 FROM orvice/apache-base
1 MAINTAINER orvice<orvice@orx.me>
2 ENV SSPANEL_VERSION 4.0.0
3 WORKDIR /var/www/html
4 COPY . /var/www/html
5 RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
6 RUN cd /var/www/html && composer install --no-scripts
7 COPY docker-entrypoint.sh /entrypoint.sh
8 RUN chmod -R 777 storage
9 EXPOSE 80
10 ENTRYPOINT ["/entrypoint.sh"]
11 CMD ["apache2-foreground"]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。
注意不是只判断前后两条指令行间的依赖关系，存在(1,3)这种情况，且前后两条指令不一定有依赖关系，依赖关系定义是即不可交换的偏序关系，交换后会导致原镜像构建失败。

[
    (0, 1),  # FROM 指令需要在 MAINTAINER 指令之前定义
    (1, 2),  # MAINTAINER 指令需要在 ENV 指令之前定义，以保持维护者信息在环境变量设置之前
    (2, 3),  # ENV SSPANEL_VERSION 需要在 WORKDIR 指令之前定义，以确保环境变量可用
    (3, 4),  # WORKDIR 指令需要在 COPY 指令之前定义，以确保正确的工作目录
    (4, 5),  # COPY 指令需要在 RUN curl 之前完成，以确保 Composer 安装在正确的目录下
    (5, 6),  # RUN curl 指令需要在 RUN composer install 之前完成
    (4, 7),  # COPY 指令需要在复制入口脚本之前完成，以确保文件存在
    (7, 8),  # COPY docker-entrypoint.sh 需要在 RUN chmod 之前完成，以确保权限设置在脚本存在后进行
    (8, 9),  # RUN chmod 需要在 EXPOSE 指令之前完成，确保目录权限设置完毕
    (9, 10), # EXPOSE 需要在 ENTRYPOINT 之前完成，以确保暴露端口前的配置
    (10, 11),# ENTRYPOINT 需要在 CMD 指令之前定义，以设置启动脚本
]
