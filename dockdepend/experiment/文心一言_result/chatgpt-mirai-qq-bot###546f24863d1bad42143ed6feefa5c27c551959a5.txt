已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM python:3.10.13-slim-bullseye
ENV DEBIAN_FRONTEND=noninteractive
COPY ./fonts/sarasa-mono-sc-regular.ttf /usr/share/fonts/
RUN apt-get update && apt install --no-install-recommends xvfb binutils build-essential qtbase5-dev wkhtmltopdf ffmpeg dbus -yq && (strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5 || true) && apt-get clean && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && rm -rf /var/lib/apt/lists/*
RUN export DBUS_SESSION_BUS_ADDRESS=`dbus-daemon --fork --config-file=/usr/share/dbus-1/session.conf --print-address`
RUN mkdir -p /app
WORKDIR /app
COPY requirements.txt /app
RUN pip install --no-cache-dir -r requirements.txt && pip cache purge
RUN apt-get remove --purge -yq binutils
COPY . /app
CMD ["/bin/bash", "/app/docker/start.sh"]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(1, 0),  # ENV 指令依赖于 FROM 指令，设置环境变量前需要基础镜像  
 (2, 0),  # COPY 指令不直接依赖于其他指令，但通常基于基础镜像的文件系统  
 (3, 2),  # RUN apt-get update 依赖于 COPY 指令，因为复制字体文件后可能需要更新系统软件包列表  
 (4, 3),  # RUN export 依赖于 RUN apt-get update，因为导出环境变量通常在系统更新和软件包安装后进行  
 (5, 4),  # RUN mkdir 依赖于 RUN export，因为创建目录通常是在环境准备好之后  
 (6, 5),  # WORKDIR 依赖于 RUN mkdir，因为设置工作目录通常是在目录创建之后  
 (7, 6),  # COPY requirements.txt 依赖于 WORKDIR，因为文件被复制到设置的工作目录中  
 (8, 7),  # RUN pip install 依赖于 COPY requirements.txt，因为需要先有 requirements.txt 文件才能安装依赖  
 (9, 8),  # RUN apt-get remove 依赖于 RUN pip install，因为通常在安装Python依赖后移除不需要的系统工具  
 (10, 9), # COPY . 依赖于 RUN apt-get remove，因为复制源代码通常在清理系统环境之后  
 (11, 10)] # CMD 依赖于 COPY .，因为启动脚本通常是在所有文件都已准备好之后执行