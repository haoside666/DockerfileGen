已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM node:16-alpine
RUN apk update
RUN apk add bzip2 tar git
RUN npm install grunt-cli -g
COPY package.json /tmp/package.json
RUN cd /tmp && npm install --unsafe-perm
RUN mkdir -p /opt/mosaico && cp -a /tmp/node_modules /opt/mosaico/ && rm -rf /tmp/node_modules
WORKDIR /opt/mosaico
COPY . /opt/mosaico
EXPOSE 9006
CMD ["grunt", "default"]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(1, 0),  # RUN apk update 依赖于 FROM，因为包更新是在基础镜像上进行的  
 (2, 1),  # RUN apk add bzip2 tar git 依赖于 apk update，确保软件包管理器更新后再安装其他工具  
 (3, 2),  # RUN npm install grunt-cli -g 依赖于 apk add，因为需要 git 等工具来支持 npm 安装全局包  
 (4, 3),  # COPY package.json 依赖于 npm 安装全局包，通常先复制 package.json 再根据它安装依赖  
 (5, 4),  # RUN cd /tmp && npm install --unsafe-perm 依赖于 COPY package.json，因为需要 package.json 文件来安装依赖  
 (6, 5),  # RUN mkdir ... 依赖于 npm install，因为需要在依赖安装完成后复制和整理文件  
 (7, 6),  # WORKDIR /opt/mosaico 依赖于之前的文件整理步骤，设置工作目录到最终的应用目录  
 (8, 7),  # COPY . /opt/mosaico 依赖于 WORKDIR，因为复制文件到工作目录  
 (9, 8),  # EXPOSE 9006 不依赖于之前的任何指令，只是声明端口  
 (10, 9)] # CMD ["grunt", "default"] 依赖于所有之前的指令，因为启动命令需要在所有配置和文件准备完成后执行