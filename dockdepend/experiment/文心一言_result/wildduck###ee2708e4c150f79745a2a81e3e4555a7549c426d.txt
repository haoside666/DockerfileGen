已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM --platform=${BUILDPLATFORM} node:lts-alpine
ARG TARGETPLATFORM
ARG TARGETARCH
ARG TARGETVARIANT
RUN printf "I'm building for TARGETPLATFORM=${TARGETPLATFORM}" && printf ", TARGETARCH=${TARGETARCH}" && printf ", TARGETVARIANT=${TARGETVARIANT} \n" && printf "With uname -s : " && uname -s && printf "and  uname -m : " && uname -mm
RUN apk --no-cache add make git dumb-init openssl
WORKDIR /wildduck
COPY package*.json ./
RUN npm install --production
COPY . .
ENV WILDDUCK_APPDIR=/wildduck WILDDUCK_CONFIG=/wildduck/config/default.toml CMD_ARGS=""
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD node ${WILDDUCK_APPDIR}/server.js --config=${WILDDUCK_CONFIG} ${CMD_ARGS}

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(1, 0),  # ARG 指令依赖于 FROM 指令，因为构建参数通常在基础镜像确定后设置  
 (2, 0),  # ARG TARGETPLATFORM 依赖于 FROM 指令，同理  
 (3, 0),  # ARG TARGETARCH 依赖于 FROM 指令，同理  
 (4, 0),  # ARG TARGETVARIANT 依赖于 FROM 指令，同理  
 (5, [0, 1, 2, 3, 4]),  # RUN 指令依赖于 FROM 和所有 ARG 指令，因为它使用了这些参数  
 (6, 5),  # RUN apk 依赖于上一个 RUN 指令，因为它是在环境设置之后进行的包安装  
 (7, 6),  # WORKDIR 依赖于 apk 包安装，因为工作目录通常设置在环境准备好之后  
 (8, 7),  # COPY package*.json 依赖于 WORKDIR，因为文件被复制到工作目录中  
 (9, 8),  # RUN npm install 依赖于 COPY 指令，因为需要先复制 package 文件才能安装依赖  
 (10, 9), # COPY . . 依赖于 npm install，因为通常在安装完依赖后复制源代码  
 (11, 10), # ENV 指令不直接依赖于其他指令，但它设置了后续指令将使用的环境变量  
 (12, 11), # ENTRYPOINT 依赖于 ENV，因为它使用了环境变量，并且通常在配置好环境后设置  
 (13, 12)] # CMD 依赖于 ENTRYPOINT，因为它是容器启动时要执行的命令