已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM ubuntu:20.04
RUN apt-get update
RUN apt-get install -y apt-utils
RUN apt-get update
RUN apt-get install -y python3.8
RUN apt-get update
RUN apt-get install -y python3-pip
RUN apt-get update
RUN apt-get install -y python3.8-dev
RUN apt-get install python-is-python3
RUN apt-get update
RUN apt-get install -y default-libmysqlclient-dev build-essential
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libfreetype-dev libfreetype6 libfreetype6-dev
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg
RUN apt-get update
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y pkg-config
COPY requirements.txt /tmp
RUN pip3 install -r /tmp/requirements.txt

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(1, 0),  # apt-get update 依赖于基础镜像 ubuntu:20.04  
 (2, 1),  # apt-get install -y apt-utils 依赖于 apt-get update  
 (3, 2),  # 第二次 apt-get update 依赖于 apt-utils 的安装  
 (4, 3),  # apt-get install -y python3.8 依赖于第二次 apt-get update  
 (5, 4),  # 第三次 apt-get update 依赖于 python3.8 的安装  
 (6, 5),  # apt-get install -y python3-pip 依赖于第三次 apt-get update  
 (7, 6),  # 第四次 apt-get update 依赖于 python3-pip 的安装  
 (8, 7),  # apt-get install -y python3.8-dev 依赖于第四次 apt-get update  
 (9, 8),  # apt-get install python-is-python3 依赖于 python3.8-dev 的安装  
 (10, 9), # 第五次 apt-get update 依赖于 python-is-python3 的安装  
 (11, 10), # apt-get install -y default-libmysqlclient-dev build-essential 依赖于第五次 apt-get update  
 (12, 11), # 第六次 apt-get update 依赖于 default-libmysqlclient-dev 和 build-essential 的安装  
 (13, 12), # DEBIAN_FRONTEND=noninteractive apt-get install -y libfreetype-dev libfreetype6 libfreetype6-dev 依赖于第六次 apt-get update  
 (14, 13), # 第七次 apt-get update 依赖于 libfreetype 相关包的安装  
 (15, 14), # DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg 依赖于第七次 apt-get update  
 (16, 15), # 第八次 apt-get update 依赖于 ffmpeg 的安装  
 (17, 16), # 第九次 apt-get update 依赖于第八次 apt-get update（这里似乎是冗余的，通常不需要连续多次更新）  
 (18, 17), # DEBIAN_FRONTEND=noninteractive apt-get install -y pkg-config 依赖于第九次 apt-get update  
 (19, 18), # COPY requirements.txt /tmp 依赖于 pkg-config 的安装  
 (20, 19)] # RUN pip3 install -r /tmp/requirements.txt 依赖于将 requirements.txt 复制到容器中