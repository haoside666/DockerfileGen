已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM ubuntu:14.04
MAINTAINER Dongweiming "ciici123@gmail.com"
ENV DEBIAN_FRONTEND noninteractive
ENV CODE_ENV "unset"
RUN echo "deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse" > /etc/apt/sources.list
RUN echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list
RUN apt-get update
RUN apt-get install curl python -yq
RUN curl -O https://raw.githubusercontent.com/douban/code/master/scripts/install_code.sh
RUN /bin/bash install_code.sh
RUN rm -rf install_code.sh
EXPOSE 8000
WORKDIR /code

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(0, 1),   # MAINTAINER指令依赖于FROM指令，定义镜像维护者信息  
 (0, 2),   # 第一个ENV指令也依赖于FROM指令，设置环境变量  
 (0, 3),   # 第二个ENV指令也依赖于FROM指令，继续设置环境变量  
 (3, 4),   # 第一个RUN指令依赖于ENV指令，因为修改了apt源列表  
 (4, 5),   # 第二个RUN指令依赖于上一个RUN指令，继续追加apt源  
 (5, 6),   # 第三个RUN指令依赖于上一个RUN指令，继续追加apt源  
 (6, 7),   # 第四个RUN指令依赖于上一个RUN指令，继续追加apt源  
 (7, 8),   # 第五个RUN指令依赖于上一个RUN指令，继续追加apt源  
 (8, 9),   # 第六个RUN指令依赖于上一个RUN指令，继续追加apt源（deb-src）  
 (9, 10),  # 第七个RUN指令依赖于上一个RUN指令，继续追加apt源（deb-src）  
 (10, 11), # 第八个RUN指令依赖于上一个RUN指令，继续追加apt源（deb-src）  
 (11, 12), # 第九个RUN指令依赖于上一个RUN指令，继续追加apt源（deb-src）  
 (12, 13), # 第十个RUN指令依赖于上一个RUN指令，继续追加apt源（deb-src）  
 (13, 14), # 第十一个RUN指令依赖于上一个RUN指令，更新apt包列表  
 (14, 15), # 第十二个RUN指令依赖于上一个RUN指令，安装curl和python  
 (15, 16), # 第十三个RUN指令依赖于上一个RUN指令，下载安装脚本  
 (16, 17), # 第十四个RUN指令依赖于上一个RUN指令，执行安装脚本  
 (17, 18), # 第十五个RUN指令依赖于上一个RUN指令，删除安装脚本  
 (18, 19), # EXPOSE指令不依赖于其他指令，声明端口  
 (19, 20)] # WORKDIR指令依赖于EXPOSE指令，设置工作目录