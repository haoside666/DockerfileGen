已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM orvice/apache-base
MAINTAINER orvice<orvice@orx.me>
ENV SSPANEL_VERSION 4.0.0
WORKDIR /var/www/html
COPY . /var/www/html
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN cd /var/www/html && composer install --no-scripts
COPY docker-entrypoint.sh /entrypoint.sh
RUN chmod -R 777 storage
EXPOSE 80
ENTRYPOINT ["/entrypoint.sh"]
CMD ["apache2-foreground"]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(0, 1),  # MAINTAINER 依赖于 FROM，因为维护者信息是基于基础镜像的  
 (1, 2),  # ENV 依赖于 MAINTAINER，因为环境变量的设置可能需要基于维护者的信息  
 (2, 3),  # WORKDIR 依赖于 ENV，因为工作目录的设定可能需要参考环境变量  
 (3, 4),  # COPY 依赖于 WORKDIR，因为文件复制的目标目录需要先被设定  
 (4, 5),  # 第一个 RUN 依赖于 COPY，因为需要复制完文件后再安装 Composer  
 (5, 6),  # 第二个 RUN 依赖于第一个 RUN，因为 Composer 需要先安装好才能运行  
 (6, 7),  # COPY docker-entrypoint.sh 依赖于第二个 RUN，因为需要在安装 Composer 和依赖后进行文件复制  
 (7, 8),  # 第三个 RUN 依赖于 COPY docker-entrypoint.sh，因为需要修改文件权限  
 (8, 9),  # EXPOSE 依赖于第三个 RUN，因为端口暴露通常发生在应用安装和配置完成后  
 (9, 10), # ENTRYPOINT 依赖于 EXPOSE，因为入口点通常设定在应用准备完毕且端口暴露后  
 (10, 11)]# CMD 依赖于 ENTRYPOINT，因为容器启动时要执行的命令是入口点的一部分