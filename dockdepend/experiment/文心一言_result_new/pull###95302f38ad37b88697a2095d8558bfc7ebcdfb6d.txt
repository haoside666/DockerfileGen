已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM node:16-alpine
LABEL org.opencontainers.image.title="pull" org.opencontainers.image.description="Keep your forks up-to-date via automated PRs" org.opencontainers.image.url="https://github.com/wei/pull" org.opencontainers.image.documentation="https://github.com/wei/pull#readme" org.opencontainers.image.source="https://github.com/wei/pull" org.opencontainers.image.licenses="MIT" org.opencontainers.image.authors="Wei He <docker@weispot.com>" maintainer="Wei He <docker@weispot.com>"
ENV APP_ID= WEBHOOK_SECRET= PRIVATE_KEY= NODE_ENV=production PORT=3000 LOG_FORMAT=short LOG_LEVEL=info WEBHOOK_PATH=/webhook PULL_INTERVAL=3600 JOB_TIMEOUT=60 MAX_CONCURRENT=10 MAX_IN_QUEUE=1000 CONFIG_FILENAME=pull.yml DEFAULT_MERGE_METHOD=hardreset DISABLE_DELAY= DISABLE_STATS= _=
WORKDIR /app
COPY package*.json ./
RUN npm ci --production && :
COPY . .
EXPOSE 3000
CMD ["npm", "start"]
ARG VCS_REF
ARG BUILD_DATE
LABEL org.opencontainers.image.ref.name=$VCS_REF org.opencontainers.image.created=$BUILD_DATE

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(0, 1),  # FROM 指令是其他所有指令的基础，设置基础镜像  
 (1, 2),  # LABEL 指令依赖于 FROM 指令，因为标签是基于基础镜像设置的  
 (2, 3),  # ENV 指令依赖于 LABEL 指令，因为环境变量可能需要根据标签进行配置  
 (3, 4),  # WORKDIR 指令依赖于 ENV 指令，因为工作目录的设置可能依赖于环境变量  
 (4, 5),  # COPY package*.json ./ 依赖于 WORKDIR，因为文件复制的目标路径是WORKDIR指定的  
 (5, 6),  # RUN 指令依赖于前面的 COPY 指令，因为 RUN 是在复制文件后进行安装依赖的操作  
 (6, 7),  # COPY . . 依赖于 RUN 指令，因为 RUN 指令可能改变了工作目录中的某些文件或状态  
 (7, 8),  # EXPOSE 指令不直接依赖于前面的指令，但它假设容器需要运行的服务已经准备好  
 (8, 9),  # CMD 指令依赖于前面的所有步骤，因为 CMD 定义了容器启动时要执行的命令  
 (9, 10), # ARG 指令在 Dockerfile 中定义构建参数，但不直接依赖其他指令  
 (10, 11)] # 最后的 LABEL 指令依赖于 ARG 指令，因为它使用构建参数来设置标签