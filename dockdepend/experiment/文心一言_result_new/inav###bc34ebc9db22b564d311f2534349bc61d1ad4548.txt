已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM ubuntu:jammy
ARG USER_ID
ARG GROUP_ID
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y git cmake make ruby gcc python3 python3-pip gcc-arm-none-eabi ninja-build gdb
RUN pip install pyyaml
RUN if [ -n "$USER_ID" ]; then RUN addgroup --gid $GROUP_ID inav; exit 0; fi
RUN if [ -n "$USER_ID" ]; then  RUN adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID inav; exit 0; fi
RUN if [ -n "$USER_ID" ]; then USER inav; fi
RUN git config --global --add safe.directory /src
VOLUME /src
WORKDIR /src/build
ENTRYPOINT ["/src/cmake/docker.sh"]

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(0, 1),  # ARG指令依赖于FROM指令，因为基础镜像确定后才能定义构建参数  
 (1, 2),  # ARG指令依赖于上一个ARG指令，因为可以连续定义多个构建参数  
 (2, 3),  # ENV指令依赖于之前的ARG指令，确保在配置环境变量前构建参数已定义  
 (3, 4),  # 第一个RUN指令依赖于ENV指令，因为环境变量配置会影响软件包的安装过程  
 (4, 5),  # 第二个RUN指令依赖于第一个RUN指令，因为pip包的安装可能依赖于之前安装的软件包  
 (5, 6),  # 第三个RUN指令依赖于第二个RUN指令，确保pip安装完成后才进行用户组添加  
 (6, 7),  # 第四个RUN指令依赖于第三个RUN指令，因为用户添加依赖于用户组的存在  
 (7, 8),  # 第五个RUN指令依赖于第四个RUN指令，因为只有在用户添加后才能设置用户身份  
 (8, 9),  # 第六个RUN指令依赖于第五个RUN指令，因为git配置应在工作目录设置之前完成  
 (9, 10), # VOLUME指令依赖于第六个RUN指令，因为卷的设置通常在配置好容器内部环境后进行  
 (10, 11),# WORKDIR指令依赖于VOLUME指令，因为工作目录的设置需要在容器卷确定之后  
 (11, 12)] # ENTRYPOINT指令依赖于WORKDIR指令，因为入口点通常在工作目录设置后定义