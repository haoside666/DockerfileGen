已知Dockerfile中的最小单元是以指令开头的行，并且从0开始给每个指令行进行编号，即第n个指令行对应n-1。若(0,1)表示第二个指令行依赖于第一个指令行，注意前后逻辑关系，现在需要得到Dockerfile的所有指令行之间的依赖关系列表。要求返回一个列表，其中每个元素的形式类似于(0,1)这种形式。


FROM clojure:alpine
VOLUME /data
LABEL description="code-maat docker image."
ARG dest=/usr/src/code-maat
RUN mkdir -p $dest
WORKDIR $dest
COPY project.clj $dest
RUN lein deps
COPY . $dest
RUN mv "$(lein uberjar | sed -n 's/^Created \(.*standalone\.jar\)/\1/p')" app-standalone.jar
ENTRYPOINT ["java", "-XX:+UseContainerSupport", "-XX:MaxRAMPercentage=85.0", "-jar", "app-standalone.jar"]
CMD []

请给出Dockerfile的所有指令行之间的依赖关系列表，只给出答案和一条注释描述即可，每个依赖关系后面跟着注释描述，不需要其余描述。

[(0, 1),   # VOLUME指令依赖于FROM指令，因为它设置容器的存储卷  
 (0, 2),   # LABEL指令也依赖于FROM指令，用于添加镜像的元数据  
 (0, 3),   # ARG指令设置构建参数，依赖于FROM指令确定构建基础  
 (3, 4),   # RUN指令依赖于ARG指令，因为使用了构建参数dest来创建目录  
 (4, 5),   # WORKDIR指令依赖于RUN指令，因为需要在创建的目录中设置工作目录  
 (5, 6),   # COPY指令依赖于WORKDIR指令，将project.clj文件复制到工作目录  
 (6, 7),   # RUN指令依赖于COPY指令，确保project.clj存在后执行lein deps命令  
 (7, 8),   # COPY指令依赖于上一个RUN指令，复制当前目录下的所有文件到工作目录  
 (8, 9),   # RUN指令依赖于COPY指令，确保所有文件存在后执行打包命令  
 (9, 10)]  # ENTRYPOINT指令依赖于RUN指令，因为需要确保app-standalone.jar存在后设置容器入口点